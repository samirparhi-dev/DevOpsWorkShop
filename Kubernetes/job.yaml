
#Multiple Parallel Jobs
##########################################
#The Job now has the following behavior: 
#five pods will get launched at the same time; all of them are execution the same Job. 
#When one of the pods terminates successfully, this means that the whole Job is done. 
#No more pods get spawned, and the Job eventually terminates.
apiVersion: batch/v1
kind: Job
metadata:
name: consumer
spec:
parallelism: 5
template:
  metadata:
    name: consumer
  spec:
    containers:
    - name: consumer
      image: busybox
      command: ["/bin/sh","-c"]
      args: ["echo 'consuming a message'; sleep $(shuf -i 5-10 -n 1)"]
    restartPolicy: OnFailure
---
#Limiting The Kubernetes Job Execution Time
#############################################
#we are instructing the container to echo some text, sleep for one second, and then exit with a non-zero status (unsuccessful exit). 
#Notice that we intentionally set the deadline to be twenty seconds while the backofflimit is 5
apiVersion: batch/v1
kind: Job
metadata:
  name: twitter-consumer
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 20
  template:
	spec:
  	  containers:
  	  - name: consumer
    	    image: busybox
    	    command: ["/bin/sh", "-c"]
    	    args: ["echo 'Consuming data'; sleep 1; exit 1"]
  	  restartPolicy: OnFailure
